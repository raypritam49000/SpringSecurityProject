package net.corejava.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.annotation.Order;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@Order(1)
public class UserSecurityConfig {
	
//	@SuppressWarnings("deprecation")
//	@Bean
//	public PasswordEncoder passwordEncoder2() {
//		return NoOpPasswordEncoder.getInstance();
//	}
//	
//	@Bean
//	public UserDetailsService userDetailsService2() {
//		return new CustomUserDetailsService();
//	}
	
//	@Bean
//	public DaoAuthenticationProvider authenticationProvider2() {
//		DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();
//		authenticationProvider.setUserDetailsService(userDetailsService2());
//		authenticationProvider.setPasswordEncoder(passwordEncoder2());
//		return authenticationProvider;
//	}

	@Bean
	public SecurityFilterChain filterChain2(HttpSecurity http) throws Exception {
		
	//	http.authenticationProvider(authenticationProvider2());
		
		http.authorizeHttpRequests().antMatchers("/").permitAll();

		http.antMatcher("/user/**")
		.authorizeHttpRequests().anyRequest().hasAnyAuthority("USER")
		//.authorizeHttpRequests().anyRequest().authenticated()
		.and().formLogin()
				.loginPage("/user/login").usernameParameter("email").loginProcessingUrl("/user/login")
				.defaultSuccessUrl("/user/home").permitAll().and().logout().logoutUrl("/user/logout")
				.logoutSuccessUrl("/");

		return http.build();
	}
}
